#*****************************************************************#
#          This describes the piccflight user commands.           #
#*****************************************************************#

------------- SYSTEM COMMANDS -------------

cmd: exit
  	exit the watchdog
	on the flight system the watchdog will restart automatically

cmd: shutdown
        exit the watchdog and shut down the computer

cmd: reboot
        exit the watchdog and reboot the computer

cmd: sysinfo
	print cpu usage

cmd: packet info
     	prints the sizes of the telemetry packets

cmd: erase flight data
        erases all data in /output/flight_data/

cmd: erase cal data
        erases all data in /output/calibration/

cmd: sleep [arg]
        causes the input console to not accept commands for [arg] seconds
        usefull if you want to paste a testing command sequence into the console
        arg = [1-5]


------------- PROCESS CONTROL -------------

cmd: xxx_proc on
	turns the xxx process on
	xxx = sci, shk, lyt, tlm, etc.

cmd: xxx_proc off
	turns the xxx process off
	xxx = sci, shk, lyt, tlm, etc.

cmd: xxx_proc enable
	enables the xxx process
	xxx = sci, shk, lyt, tlm, etc.

cmd: xxx_proc disable
	disables the xxx process
	xxx = sci, shk, lyt, tlm, etc.

cmd: xxx_proc restart
        kills and restarts process xxx 
        xxx = sci, shk, lyt, tlm, etc.

cmd: proc status
	prints the current status of all available processes

------------- CIRCULAR BUFFER CONTROL -------------

cmd: circbuf xxx write on
        turns circbuf xxx writing on
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx write off
        turns circbuf xxx writing off
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx read on
        turns circbuf xxx reading on
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx read new
        turns circbuf xxx reading on, read newest data
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx read off
        turns circbuf xxx reading off
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx save on
        turns circbuf xxx saving on
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx save off
        turns circbuf xxx saving off
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx send on
        turns circbuf xxx sending on
	xxx = scievent, shkevent, lytevent...

cmd: circbuf xxx send off
        turns circbuf xxx sending off
	xxx = scievent, shkevent, lytevent...

cmd: circbuf reset
        resets circbuf settings to defaults

cmd: circbuf status
        prints the status of each circular buffer

------------- FAKE DATA MODES -------------

cmd: xxx fakemode [arg]
	enables a fake data mode for a specific camera or telemetry
	xxx = shk, lyt, sci, acq, tlm
	arg = string command for the fake mode
	sending command without the cmd will print the available modes

 
------------ CALIBRATION MODES ------------
	
cmd: alp calmode [arg]
	sets the alpao dm calibration mode
	arg = string command for the calibration mode
	sending command without the cmd will print the available modes
	
cmd: hex calmode [arg]
	sets the hexapod calibration mode
	arg = string command for the calibration mode
	sending command without the cmd will print the available modes

cmd: bmc calmode [arg]
	sets the bmc dm calibration mode
	arg = string command for the calibration mode
	sending command without the cmd will print the available modes
	
cmd: tgt calmode [arg]
	sets the zernike target calibration mode
	arg = string command for the calibration mode
	sending command without the cmd will print the available modes
	
------------ CALIBRATION SETTINGS ------------

cmd: alp timer length [arg]
        set the length of timed alp calmodes
	arg = floating point seconds
	
cmd: alp cal scale [arg]
        scale the ALP calibration commands by [arg]
	arg = floating point scale factor
	
cmd: bmc timer length [arg]
        set the length of timed bmc calmodes
	arg = floating point seconds
	
cmd: bmc cal scale [arg]
        scale the BMC calibration commands by [arg]
	this applies to HOWFS probes as well
	arg = floating point scale factor
	
------------------ STATES -----------------

cmd: state [arg]
	set the operational state of the flight software
	cmd: string command for the state
	sending command without the cmd will print the available states

cmd: bmc commander sci
        change bmc commader to sci
	
cmd: bmc commander wat
        change bmc commader to wat (user)
	
-------------- DATA RECORDING -------------

cmd: shk start rec
	start recording shk data to disk

cmd: shk stop rec
	stop recording shk data to disk

cmd: lyt start rec
	start recording lyt data to disk

cmd: lyt stop rec
	stop recording lyt data to disk

cmd: sci start rec
	start recording sci data to disk

cmd: sci stop rec
	stop recording sci data to disk

------------- HEXAPOD CONTROL -------------

cmd: hex init
        re-initialize the hexapod

cmd: hex get error
        get and clear current hexapod controller error

cmd: hex inc step
	doubles the incremental step size hexapod movements

cmd: hex dec step
	halves the incremental step size hexapod movements

cmd: hex rst step
	resets the incremental step size hexapod movements

cmd: hex getpos
	query the hexapod for its current position and print to screen

cmd: hex gohome
	move hexapod to #defined home position

cmd: hex godef
	move hexapod to #defined default position

cmd: hex savepos
     	save current hexapod position to file

cmd: hex loadpos
        load hexapod position from file

cmd: hex move [arg]
	move the hexapod one step in the given direction
	arg = +x, -x, +y, -y, +z, -z, +u, -u, +v, -v, +w, -w

cmd: hex move [arg1] [arg2]
	move the hexapod one step in the given direction
	arg1 = dx,dy,dz,du,dv,dw
	arg2 = amount to move
	
cmd: hex spiral autostop on
      	turn hex spiral search autostop on
	search will stop when star is found

cmd: hex spiral autostop off
        turn hex spiral search autostop off
	search will not stop when star is found

------------- ALPAO DM CONTROL -------------

cmd: alp bias [arg]
        set all ALP actuators to the same value
        arg = floating point actuator value [-1,+1] (power limited)

cmd: alp zero flat
        set ALP actuators to all zeros

cmd: alp revert flat
        revert ALP to #defined flat pattern

cmd: alp save flat
        save current ALP command as default flat pattern (alp_flat.dat)

cmd: alp load flat
        load saved ALP flat pattern (alp_flat.dat)

cmd: alp random
     	applies a random actuator perturbation to the current ALP command

cmd: alp zrandom
     	applies a random zernike perturbation to the current ALP command

cmd: alp reset
        reload the user command ALP-to-Zernike matrix
	reset all alp functions

cmd: alp set zernike [arg1] [arg2]
	add a zernike delta to the current ALP command
	arg1 = zernike index [0,1,2,3,...,22]
	arg2 = zernike wavefront amplitude [microns RMS]

cmd: alp set actuator [arg1] [arg2]
	add a single actuator delta to the current ALP command
	arg1 = actuator index [0,1,2,3,...,96]
	arg2 = actuator delta in analog command units [-1 to +1] 

------------- BMC DM CONTROL -------------

cmd: bmc reset
        reset all bmc functions

cmd: bmc hv enable
        enable BMC high voltage

cmd: bmc hv disable
     	disable BMC high voltage

cmd: bmc hv on
     	turn BMC high voltage ON (HV must be enabled)

cmd: bmc hv off
     	turn BMC high voltage OFF (HV must be enabled)

cmd: bmc leds on
     	turn BMC LEDs ON

cmd: bmc leds off
     	turn BMC LEDs OFF

cmd: bmc bias [arg]
        set all BMC actuators to the same value
        arg = floating point actuator value [-1,+1] (power limited)

cmd: bmc zero flat
        set BMC actuators to all zeros

cmd: bmc revert flat
        revert BMC to #defined flat pattern

cmd: bmc save flat
        save current BMC command as default flat pattern (bmc_flat.dat)

cmd: bmc load flat
        load saved BMC flat pattern (bmc_flat.dat)

cmd: bmc set flat [arg]
     	load a previous flat onto the DM going arg steps into the past
	arg = 0-9 (0--> last flat, 1--> one before last flat, 2--> two before last flat, etc..)

cmd: bmc random
     	applies a random actuator perturbation to the current BMC command

cmd: bmc probe [arg]
     	apply one of the HOWFS probe patterns to the BMC
	arg = probe index [0,1,2,3]

cmd: bmc test [arg]
     	apply a test pattern to the BMC
	arg = test index (see export_howfc.pro)
	      0: xtilt
	      1: ytilt
	      2: xsine
	      3: ysine

cmd: bmc sine [arg]
     	apply a sinewave pattern to the BMC
	arg = sine pattern index (see export_howfc.pro)

cmd: bmc set actuator [arg1] [arg2]
	add a single actuator delta (volts) to the current BMC command
	arg1 = actuator index [0,1,2,3,...,951]
	arg2 = actuator delta in volts [-50 to +50] 

cmd: efc sci thresh [arg]
        set SCI pixel threshold for EFC inclusion
	arg = pixel ADU, set to 0 to disable

cmd: efc bmc max [arg]
        set maximum actuator delta for BMC DM during EFC
	arg = max actuator delta in nm, set to 0 to disable

cmd: efc gain [arg]
        set EFC gain
	arg = [-1,0]
	
------------- SENSOR CALIBRATION -------------

cmd: shk calibrate hex [arg]
        record shk data through one complete cycle of a hex calmode
	arg = string command for the hex calmode

cmd: shk calibrate alp [arg]
        record shk data through one complete cycle of an alp calmode
	arg = string command for the alp calmode

cmd: shk calibrate tgt [arg]
        record shk data through one complete cycle of an tgt calmode
	arg = string command for the tgt calmode

cmd: lyt calibrate alp [arg]
        record lyt data through one complete cycle of an alp calmode
	arg = string command for the alp calmode

cmd: lyt calibrate tgt [arg]
        record lyt data through one complete cycle of an tgt calmode
	arg = string command for the tgt calmode

cmd: sci calibrate bmc [arg]
        record sci data through one complete cycle of an bmc calmode
	arg = string command for the bmc calmode

------------- CAMERA CONTROL -------------

cmd: sci exptime [arg]
        set the sci camera exposure time
	arg = exposure time in seconds

cmd: sci frmtime [arg]
        set the sci camera frame time
	arg = frame time in seconds

cmd: shk exptime [arg]
        set the shk camera exposure time
	arg = exposure time in seconds

cmd: shk frmtime [arg]
        set the shk camera frame time
	arg = frame time in seconds

cmd: lyt exptime [arg]
        set the lyt camera exposure time
	arg = exposure time in seconds

cmd: lyt frmtime [arg]
        set the lyt camera frame time
	arg = frame time in seconds

cmd: acq exptime [arg]
        set the acq camera exposure time
	arg = exposure time in seconds

cmd: acq frmtime [arg]
        set the acq camera frame time
	arg = frame time in seconds


------------- CAMERA RESET -------------

cmd: shk reset
     	reset shk_process_image function
	reloads calibration files

cmd: lyt reset
     	reset lyt_process_image function
	reloads calibration files

cmd: sci reset
     	reset sci_process_image function
	reloads calibration files

cmd: acq reset
     	reset acq_process_image function
	reloads calibration files

------------- SHACK-HARTMANN LOWFS SETTINGS -------------

cmd: shk set origin
        set the center of the centroid boxes AND the cell origins to the current spot centers
	this will zero out the centroid errors across the grid

cmd: shk revert origin
        revert the cell and centroid box origins to the #defined values

cmd: shk save origin
        save the current cell and centroid box origins to disk

cmd: shk load origin
        load the cell and centroid box origins from disk

cmd: shk shift origin [arg]
        shift the cell and centroid box origins 1 pixel in the given direction
	arg = +x, -x, +y, -y

------------- LYOT LOWFS SETTINGS -------------

cmd: lyt shift origin [arg]
        shift the image origin 1 pixel in the given direction
	arg = +x, -x, +y, -y

cmd: lyt roi [arg1] [arg2]
     	change the LYT readout ROI origin
	arg1 = X origin
	arg2 = Y origin

cmd: lyt enable mag
        enable lyt image magnification
	
cmd: lyt disable mag
        disable lyt image magnification
	
cmd: lyt mag [arg]
        set lyt image magnification
	arg = magnification [0.1 - 10.0]

cmd: lyt xoff [arg]
        set lyt image magnification xoffset
	arg = sub-pixel shift

cmd: lyt yoff [arg]
        set lyt image magnification xoffset
	arg = sub-pixel shift

cmd: lyt enable cen
        enable lyt centroid control
	
cmd: lyt disable cen
        disable lyt centroid control
	
cmd: lyt set ref
	set current LYT image as the reference image

cmd: lyt mod ref
 	set model LYT image as the reference image

cmd: lyt def ref
	set the default LYT image as the reference image

cmd: lyt save ref
  	save current reference image to disk

cmd: lyt load ref
	load current reference image fron disk

------------- LYT Dark Image Commands -------------

cmd: lyt sub dark enable
	enable dark subtraction
	
cmd: lyt sub dark disable
	disable dark subtraction
	
cmd: lyt set dark
	record current dark image

cmd: lyt zero dark
        zero out current dark image

cmd: lyt save dark
        save current dark image to file

cmd: lyt load dark
        load dark image from file

------------- ZERNIKE TARGETS -------------

cmd: [cam] target [arg1] [arg2]
	cam = "shk" or "lyt"
        set the arg1 zernike target to arg2	
	arg1 = zernike index [0,1,2,3,...,22]
	arg2 = zernike wavefront amplitude [microns RMS]

cmd: [cam] target reset
     	cam = "shk" or "lyt"
	reset targets to defaults

cmd: [cam] inc target [arg1] [arg2]
	cam = "shk" or "lyt"
        increment the arg1 zernike target by arg2	
	arg1 = zernike index [0,1,2,3,...,22]
	arg2 = zernike wavefront amplitude [microns RMS]


------------- ZERNIKE CONTROL SWITCHES -------------
NOTE: use cam = "alp" to control zernikes in alp calmode flight only

cmd: [cam] zernike status
        cam = "shk" or "lyt" or "alp"
        print out which zernikes are enabled and which are disabled

cmd: [cam] zernike enable all
        cam = "shk" or "lyt" or "alp"
        enable control of all zernikes

cmd: [cam] zernike enable [arg]
        cam = "shk" or "lyt" or "alp"
        enable control of a single zernike
	arg = zernike index

cmd: [cam] zernike disable all
        cam = "shk" or "lyt" or "alp"
        disable control of all zernikes

cmd: [cam] zernike disable [arg]
        cam = "shk" or "lyt" or "alp"
        disable control of a single zernike
	arg = zernike index

------------- GAIN SETTINGS -------------

cmd: shk alp scale cgain [arg]
        change the shk2alp cell controller PID gains by a factor
	arg = scale factor [0-1] to mutiply by the default gains

cmd: shk alp cgain [arg1] [arg2] [arg3]
        change the shk2alp cell controller PID gains to specific values
	arg1 = P gain
	arg2 = I gain
	arg3 = D gain

cmd: shk alp scale zgain [arg]
        change the shk2alp zernike controller PID gains by a factor
	arg = scale factor [0-1] to mutiply by the default gains

cmd: shk alp zgain [arg1] [arg2] [arg3] [arg4]
        change the shk2alp zernike controller PID gains to specific values
        arg1 = Zernike index
        arg2 = P gain
	arg3 = I gain
	arg4 = D gain

cmd: shk hex scale zgain [arg]
        change the shk2hex zernike controller PID gains by a factor
	arg = scale factor [0-1] to mutiply by the default gains
	
cmd: shk hex zgain [arg1] [arg2] [arg3]
        change the shk2hex zernike controller PID gains to specific values
	arg1 = P gain
	arg2 = I gain
	arg3 = D gain
	NOTE: all zernikes use the same gain

cmd: lyt alp scale zgain [arg]
        change the lyt2alp zernike controller PID gains by a factor
	arg = scale factor [0-1] to mutiply by the default gains

cmd: lyt alp zgain [arg1] [arg2] [arg3] [arg4]
        change the lyt2alp zernike controller PID gains to specific values
        arg1 = Zernike index
        arg2 = P gain
	arg3 = I gain
	arg4 = D gain
	
------------- PID CONTROLLER TYPE -------------
cmd: shk alp pid single
        use single integrator PID for shk alp control

cmd: shk alp pid double
        use double integrator PID for shk alp control

cmd: lyt alp pid single
        use single integrator PID for lyt alp control

cmd: lyt alp pid double
        use double integrator PID for lyt alp control

------------- SCI CAMERA SETTINGS -------------

cmd: sci set origin
        set brightest pixels in each band as the ROI center

cmd: sci find origin
        set brightest pixels in each band as the ROI center
        search the entire image

cmd: sci track origin on
        continually set brightest pixels in each band as the ROI center

cmd: sci track origin off
        turn off brightest pixel tracking
	
cmd: sci revert origin
	revert the band ROIs to the #defined centers

cmd: sci save origin
        save the current band ROI origins to disk

cmd: sci load origin
        load the band ROI origins from disk

cmd: sci shift origin [arg1] [arg2] [arg3]
        shift the band [arg1] ROI origins in the given direction [arg2] by [arg3] pixels
	arg1 = 0,1,2,3,4
	arg2 = x,y
	arg3 = number of pixels (+/-)

cmd: sci set ref
        set reference image for sci field normalization

cmd: sci tec enable
        enables the sci tec

cmd: sci tec disable
        disables the sci tec

cmd: sci tec setpoint [arg]
        sets the sci tec setpoint to [arg] degrees C
	arg = signed integer degrees C

------------- ACQ CAMERA SETTINGS -------------

cmd: acq thresh [arg]
	set acq image minimum pixel value threshold to [arg]
	arg = 0-255 ADU

------------- DOOR CONTROL -------------

cmd: open door [arg]
	open door number [arg]
	arg = 1,2,3,4
	
cmd: close door [arg]
	close door number [arg]
	arg = 1,2,3,4
	
cmd: stop door [arg]
	stop door number [arg]
	arg = 1,2,3,4
	
	
------------- HEATER CONTROL -------------

cmd: htr status
	print status of all heaters

cmd: htr [arg] enable
	enable heater [arg]
	arg = 0-15 OR "all"

cmd: htr [arg] disable
	disable heater [arg]
	arg = 0-15 OR "all"

cmd: htr [arg] override
	put heater [arg] into user override
	arg = 0-15 OR "all"

cmd: htr [arg] release
	release heater [arg] from user override
	arg = 0-15 OR "all"

cmd: htr [arg1] maxpower [arg2]
	set heater [arg1] maxpower to [arg2]
	arg1 = 0-15
	arg2 = 0-100

cmd: htr [arg1] power [arg2]
	manually set heater [arg1] power to [arg2]
	arg1 = 0-15
	arg2 = 0-100
	heater must be in user override

cmd: htr [arg1] setpoint [arg2]
	set heater [arg1] temperature setpoint to [arg2]
	arg1 = 0-15
	arg2 = deg C
	
cmd: htr [arg1] deadband [arg2]
	set heater [arg1] temperature deadband to [arg2]
	arg1 = 0-15
	arg2 = deg C

cmd: htr [arg1] gain [arg2]
	set heater [arg1] control gain to [arg2]
	arg1 = 0-15
	arg2 = 0-100 [%/deg C]
	
cmd: htr [arg1] sensor [arg2] [arg3]
	set heater [arg1] sensor routing to adc [arg2] channel [arg3]
	arg1 = 0-15
	arg2 = 1,2,3
	arg3 = 0-32

------------- THERMAL CONTROL -------------
cmd: thm vref enable
	enable auto calibration of temperature sensors using the vref measurement

cmd: thm vref disable
	disable auto calibration of temperature sensors using the vref measurement

------------- LED CONTROL -------------

cmd: led on [arg]
	turn led on with voltage [arg] volts
	arg = 0-5

cmd: led off
	turn led off
























